## This file is managed by Salt , any manual change will be overwritten.
{%- set cfg_squid = salt['pillar.get']('squid', {}) -%}
{%- set example_rule = cfg_squid.get('example_rule', True) -%}
{%- from "squid/map.jinja" import map with context %}

# Default configuration if none is set
{%- if cfg_squid == {} %}
acl localhost src 127.0.0.1
acl SSL_ports port 443
acl Safe_ports port 80		# http
acl Safe_ports port 21		# ftp
acl Safe_ports port 443		# https
acl Safe_ports port 70		# gopher
acl Safe_ports port 210		# wais
acl Safe_ports port 1025-65535	# unregistered ports
acl Safe_ports port 280		# http-mgmt
acl Safe_ports port 488		# gss-http
acl Safe_ports port 591		# filemaker
acl Safe_ports port 777		# multiling http
acl CONNECT method CONNECT
acl manager url_regex -i ^cache_object:// /squid-internal-mgr/

# Recommended minimum Access Permission configuration:

# Deny requests to certain unsafe ports
http_access deny !Safe_ports
# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports
# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager
# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost
http_access allow localhost
http_access deny all
http_port 3128
coredump_dir /var/spool/squid3
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern .		0	20%	4320

{%- else %}

## ACL elements
{%- set acls = salt['pillar.get']('squid:acl', {}) %}
{%- for acl, data in acls.items() %}
  {%- set comment = data['comment']|default(False) %}
  {%- set type = data['type'] %}
  {%- set targets = data['targets'] %}
  {%- if comment %}
# {{ comment }}
{%- endif %}
  {%- for target in targets %}
acl {{ acl }} {{ type }} {{ target }}
  {%- endfor %}
{% endfor %}


acl CONNECT method CONNECT

# Set cache manager user and password
{%- if cfg_squid.get('cache_mgr_user', False) %}
cache_mgr {{ cfg_squid.get('cache_mgr_user', {}) }}
{%- else %}
# cache manager user was not defined
{%- endif %}

{%- if cfg_squid.get('cache_mgr_password', False) %}
cachemgr_passwd {{ cfg_squid.get('cache_mgr_password', {}) }} all
{%- else %}
# cache manager password was not defined
{%- endif %}

http_access deny !Safe_ports

http_access deny CONNECT !SSL_ports

http_access allow localhost manager
http_access deny manager


#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#
{% if example_rule %}
# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
http_access allow localnet
http_access allow localhost
{%  endif %}

{%- for rule in cfg_squid.get('http_access', []) %}
http_access {{rule}}
{%- endfor %}

# And finally deny all other access to this proxy
http_access deny all

# Squid normally listens to port 3128
{%- for http_port in cfg_squid.get('http_port', ['3128']) %}
http_port {{http_port}}
{%- endfor %}

{%- for https_port in cfg_squid.get('https_port', []) %}
https_port {{https_port}}
{%- endfor %}

# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /var/cache/squid 256 16 256
{{ cfg_squid.get('cache_dir', '') }}

# Leave coredumps in the first cache dir
coredump_dir {{map.cache}}

#
# Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern .		0	20%	4320

{{ cfg_squid.get('extra_configuration', '') }}

visible_hostname {{ cfg_squid.get('visible_hostname', salt['grains.get']('id')) }}

{%- endif %}
